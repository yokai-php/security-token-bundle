name: "Tests"

on:
  pull_request:
  push:
    branches:
      - "3.x"

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - php-version: '7.4'
            symfony-version: '4.4.*'
          - php-version: '8.2'
            symfony-version: '4.4.*'
          - php-version: '7.4'
            symfony-version: '5.4.*'
          - php-version: '8.2'
            symfony-version: '5.4.*'
          - php-version: '8.1'
            symfony-version: '6.3.*'
          - php-version: '8.2'
            symfony-version: '6.3.*'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup env & install dependencies"
        uses: ./.github/actions/install
        with:
          php-version: ${{ matrix.php-version }}
          symfony-version: ${{ matrix.symfony-version }}
      - name: "Run tests with phpunit/phpunit"
        run: vendor/bin/phpunit

  phpstan:
    name: "PhpStan"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup env & install dependencies"
        uses: ./.github/actions/install
        with:
          php-version: '8.1'
          symfony-version: '6.1.*'
      - name: "Run static analyzis with phpstan/phpstan"
        run: vendor/bin/phpstan analyze

  checkstyke:
    name: "Checkstyle"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup env & install dependencies"
        uses: ./.github/actions/install
        with:
          php-version: '8.1'
          symfony-version: '6.1.*'
      - name: "Run checkstyle with squizlabs/php_codesniffer"
        run: vendor/bin/phpcs

  codecov:
    name: "Code coverage"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup env & install dependencies"
        uses: ./.github/actions/install
        with:
          php-version: '8.1'
          symfony-version: '6.1.*'
          coverage-mode: 'xdebug'
      - name: "Run tests with phpunit/phpunit"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          vendor/bin/phpunit --coverage-clover coverage.xml
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1
